plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

group = 'es.deusto.sd'
version = '0.0.1-SNAPSHOT'

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}
tasks.compileJava {
    options.encoding = 'UTF-8'
}

application {
    // Define the main class for the application.
    mainClass = 'es.deusto.sd.facebook.FacebookAuthServer'
}

/*Fragment generated by Claude Sonet
Define arguments to pass to the Main class - two means: flexible from command shell OR by default

Command in case of overriding the port arg ->
./gradlew run -Parg1=7500

*/

run {
		
    if (project.hasProperty('arg1')) {
        args project.property('arg1')
    } else {
        args '8082'
    }
    // Forcing the encoding
    systemProperty "file.encoding", "UTF-8"
	standardOutput = new PrintStream(System.out, true, "UTF-8")
	PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out, "UTF-8"), true);
	out.println("Testing UTF- in build.gradle = mañana y de día");
}


repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
	// https://mvnrepository.com/artifact/org.json/json
	implementation 'org.json:json:20240303'

    testImplementation libs.junit.jupiter
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    // This dependency is used by the application.
    implementation libs.guava
}



tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
